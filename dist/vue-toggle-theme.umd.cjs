(function(e,t){typeof exports=="object"&&typeof module<"u"?module.exports=t(require("vue")):typeof define=="function"&&define.amd?define(["vue"],t):(e=typeof globalThis<"u"?globalThis:e||self,e.ToggleTheme=t(e.Vue))})(this,function(e){"use strict";const t="",l=(h,r)=>{const s=h.__vccOpts||h;for(const[o,n]of r)s[o]=n;return s},i={name:"ToggleTheme",props:{defaultTheme:{type:String,default:window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}},data(){return{theme:this.defaultTheme,currentTheme:null,docEl:document.documentElement}},mounted(){this.setTheme()},methods:{setTheme(){this.currentTheme=localStorage.getItem("theme")||this.defaultTheme,this.docEl.setAttribute("data-theme",this.currentTheme),this.docEl.setAttribute("defaulttheme",this.currentTheme),this.updateMetaTheme()},updateMetaTheme(){this.metaTheme=document.querySelector('meta[name="theme-color"]'),this.cssVar=getComputedStyle(this.docEl).getPropertyValue("--meta-theme-color"),this.metaTheme.setAttribute("content",this.cssVar)},pickTheme(){this.currentTheme=this.currentTheme==="dark"?"light":"dark",localStorage.setItem("theme",this.currentTheme),this.setTheme()}},computed:{themeClasses(){return{"toggle-theme--dark":this.currentTheme==="dark","toggle-theme--light":this.currentTheme==="light"}}}};function c(h,r,s,o,n,m){return e.openBlock(),e.createElementBlock("button",{themecolorlist:"light, dark",onClick:r[0]||(r[0]=(...u)=>m.pickTheme&&m.pickTheme(...u)),class:e.normalizeClass(["toggle-theme",m.themeClasses])},[e.renderSlot(h.$slots,"default")],2)}return l(i,[["render",c]])});
